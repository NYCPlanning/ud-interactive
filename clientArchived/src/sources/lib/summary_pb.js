// source: summary.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.BuildingCounts', null, global);
goog.exportSymbol('proto.BuildingDimensions', null, global);
goog.exportSymbol('proto.BuildingFAR', null, global);
goog.exportSymbol('proto.BuildingFloorArea', null, global);
goog.exportSymbol('proto.BuildingSummary', null, global);
goog.exportSymbol('proto.ScenarioSummary', null, global);
goog.exportSymbol('proto.StudySummary', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.BuildingSummary = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.BuildingSummary.repeatedFields_, null);
};
goog.inherits(proto.BuildingSummary, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.BuildingSummary.displayName = 'proto.BuildingSummary';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.BuildingFloorArea = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.BuildingFloorArea, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.BuildingFloorArea.displayName = 'proto.BuildingFloorArea';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.BuildingFAR = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.BuildingFAR, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.BuildingFAR.displayName = 'proto.BuildingFAR';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.BuildingDimensions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.BuildingDimensions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.BuildingDimensions.displayName = 'proto.BuildingDimensions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.BuildingCounts = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.BuildingCounts, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.BuildingCounts.displayName = 'proto.BuildingCounts';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ScenarioSummary = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ScenarioSummary.repeatedFields_, null);
};
goog.inherits(proto.ScenarioSummary, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ScenarioSummary.displayName = 'proto.ScenarioSummary';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.StudySummary = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.StudySummary.repeatedFields_, null);
};
goog.inherits(proto.StudySummary, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.StudySummary.displayName = 'proto.StudySummary';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.BuildingSummary.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.BuildingSummary.prototype.toObject = function(opt_includeInstance) {
  return proto.BuildingSummary.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.BuildingSummary} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.BuildingSummary.toObject = function(includeInstance, msg) {
  var f, obj = {
    siteId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    scenarioId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    zoneIdList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    lotCount: jspb.Message.getFieldWithDefault(msg, 4, 0),
    zoningLotArea: jspb.Message.getFieldWithDefault(msg, 5, 0),
    existingZoning: jspb.Message.getFieldWithDefault(msg, 6, ""),
    proposedZoning: jspb.Message.getFieldWithDefault(msg, 7, ""),
    group: jspb.Message.getFieldWithDefault(msg, 8, ""),
    note: jspb.Message.getFieldWithDefault(msg, 9, ""),
    gfaProvided: (f = msg.getGfaProvided()) && proto.BuildingFloorArea.toObject(includeInstance, f),
    zfaProvided: (f = msg.getZfaProvided()) && proto.BuildingFloorArea.toObject(includeInstance, f),
    gfaRequired: (f = msg.getGfaRequired()) && proto.BuildingFloorArea.toObject(includeInstance, f),
    far: (f = msg.getFar()) && proto.BuildingFAR.toObject(includeInstance, f),
    dimensions: (f = msg.getDimensions()) && proto.BuildingDimensions.toObject(includeInstance, f),
    counts: (f = msg.getCounts()) && proto.BuildingCounts.toObject(includeInstance, f),
    counts20: (f = msg.getCounts20()) && proto.BuildingCounts.toObject(includeInstance, f),
    counts25: (f = msg.getCounts25()) && proto.BuildingCounts.toObject(includeInstance, f),
    counts30: (f = msg.getCounts30()) && proto.BuildingCounts.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.BuildingSummary}
 */
proto.BuildingSummary.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.BuildingSummary;
  return proto.BuildingSummary.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.BuildingSummary} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.BuildingSummary}
 */
proto.BuildingSummary.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSiteId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setScenarioId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addZoneId(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLotCount(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setZoningLotArea(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setExistingZoning(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setProposedZoning(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setGroup(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setNote(value);
      break;
    case 10:
      var value = new proto.BuildingFloorArea;
      reader.readMessage(value,proto.BuildingFloorArea.deserializeBinaryFromReader);
      msg.setGfaProvided(value);
      break;
    case 11:
      var value = new proto.BuildingFloorArea;
      reader.readMessage(value,proto.BuildingFloorArea.deserializeBinaryFromReader);
      msg.setZfaProvided(value);
      break;
    case 12:
      var value = new proto.BuildingFloorArea;
      reader.readMessage(value,proto.BuildingFloorArea.deserializeBinaryFromReader);
      msg.setGfaRequired(value);
      break;
    case 13:
      var value = new proto.BuildingFAR;
      reader.readMessage(value,proto.BuildingFAR.deserializeBinaryFromReader);
      msg.setFar(value);
      break;
    case 14:
      var value = new proto.BuildingDimensions;
      reader.readMessage(value,proto.BuildingDimensions.deserializeBinaryFromReader);
      msg.setDimensions(value);
      break;
    case 15:
      var value = new proto.BuildingCounts;
      reader.readMessage(value,proto.BuildingCounts.deserializeBinaryFromReader);
      msg.setCounts(value);
      break;
    case 16:
      var value = new proto.BuildingCounts;
      reader.readMessage(value,proto.BuildingCounts.deserializeBinaryFromReader);
      msg.setCounts20(value);
      break;
    case 17:
      var value = new proto.BuildingCounts;
      reader.readMessage(value,proto.BuildingCounts.deserializeBinaryFromReader);
      msg.setCounts25(value);
      break;
    case 18:
      var value = new proto.BuildingCounts;
      reader.readMessage(value,proto.BuildingCounts.deserializeBinaryFromReader);
      msg.setCounts30(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.BuildingSummary.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.BuildingSummary.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.BuildingSummary} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.BuildingSummary.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSiteId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getScenarioId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getZoneIdList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
  f = message.getLotCount();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getZoningLotArea();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getExistingZoning();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getProposedZoning();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getGroup();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getNote();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getGfaProvided();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.BuildingFloorArea.serializeBinaryToWriter
    );
  }
  f = message.getZfaProvided();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.BuildingFloorArea.serializeBinaryToWriter
    );
  }
  f = message.getGfaRequired();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.BuildingFloorArea.serializeBinaryToWriter
    );
  }
  f = message.getFar();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      proto.BuildingFAR.serializeBinaryToWriter
    );
  }
  f = message.getDimensions();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      proto.BuildingDimensions.serializeBinaryToWriter
    );
  }
  f = message.getCounts();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      proto.BuildingCounts.serializeBinaryToWriter
    );
  }
  f = message.getCounts20();
  if (f != null) {
    writer.writeMessage(
      16,
      f,
      proto.BuildingCounts.serializeBinaryToWriter
    );
  }
  f = message.getCounts25();
  if (f != null) {
    writer.writeMessage(
      17,
      f,
      proto.BuildingCounts.serializeBinaryToWriter
    );
  }
  f = message.getCounts30();
  if (f != null) {
    writer.writeMessage(
      18,
      f,
      proto.BuildingCounts.serializeBinaryToWriter
    );
  }
};


/**
 * optional string site_id = 1;
 * @return {string}
 */
proto.BuildingSummary.prototype.getSiteId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.BuildingSummary} returns this
 */
proto.BuildingSummary.prototype.setSiteId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string scenario_id = 2;
 * @return {string}
 */
proto.BuildingSummary.prototype.getScenarioId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.BuildingSummary} returns this
 */
proto.BuildingSummary.prototype.setScenarioId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated string zone_id = 3;
 * @return {!Array<string>}
 */
proto.BuildingSummary.prototype.getZoneIdList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.BuildingSummary} returns this
 */
proto.BuildingSummary.prototype.setZoneIdList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.BuildingSummary} returns this
 */
proto.BuildingSummary.prototype.addZoneId = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.BuildingSummary} returns this
 */
proto.BuildingSummary.prototype.clearZoneIdList = function() {
  return this.setZoneIdList([]);
};


/**
 * optional int32 lot_count = 4;
 * @return {number}
 */
proto.BuildingSummary.prototype.getLotCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.BuildingSummary} returns this
 */
proto.BuildingSummary.prototype.setLotCount = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 zoning_lot_area = 5;
 * @return {number}
 */
proto.BuildingSummary.prototype.getZoningLotArea = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.BuildingSummary} returns this
 */
proto.BuildingSummary.prototype.setZoningLotArea = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string existing_zoning = 6;
 * @return {string}
 */
proto.BuildingSummary.prototype.getExistingZoning = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.BuildingSummary} returns this
 */
proto.BuildingSummary.prototype.setExistingZoning = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string proposed_zoning = 7;
 * @return {string}
 */
proto.BuildingSummary.prototype.getProposedZoning = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.BuildingSummary} returns this
 */
proto.BuildingSummary.prototype.setProposedZoning = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string group = 8;
 * @return {string}
 */
proto.BuildingSummary.prototype.getGroup = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.BuildingSummary} returns this
 */
proto.BuildingSummary.prototype.setGroup = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string note = 9;
 * @return {string}
 */
proto.BuildingSummary.prototype.getNote = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.BuildingSummary} returns this
 */
proto.BuildingSummary.prototype.setNote = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional BuildingFloorArea gfa_provided = 10;
 * @return {?proto.BuildingFloorArea}
 */
proto.BuildingSummary.prototype.getGfaProvided = function() {
  return /** @type{?proto.BuildingFloorArea} */ (
    jspb.Message.getWrapperField(this, proto.BuildingFloorArea, 10));
};


/**
 * @param {?proto.BuildingFloorArea|undefined} value
 * @return {!proto.BuildingSummary} returns this
*/
proto.BuildingSummary.prototype.setGfaProvided = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.BuildingSummary} returns this
 */
proto.BuildingSummary.prototype.clearGfaProvided = function() {
  return this.setGfaProvided(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.BuildingSummary.prototype.hasGfaProvided = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional BuildingFloorArea zfa_provided = 11;
 * @return {?proto.BuildingFloorArea}
 */
proto.BuildingSummary.prototype.getZfaProvided = function() {
  return /** @type{?proto.BuildingFloorArea} */ (
    jspb.Message.getWrapperField(this, proto.BuildingFloorArea, 11));
};


/**
 * @param {?proto.BuildingFloorArea|undefined} value
 * @return {!proto.BuildingSummary} returns this
*/
proto.BuildingSummary.prototype.setZfaProvided = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.BuildingSummary} returns this
 */
proto.BuildingSummary.prototype.clearZfaProvided = function() {
  return this.setZfaProvided(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.BuildingSummary.prototype.hasZfaProvided = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional BuildingFloorArea gfa_required = 12;
 * @return {?proto.BuildingFloorArea}
 */
proto.BuildingSummary.prototype.getGfaRequired = function() {
  return /** @type{?proto.BuildingFloorArea} */ (
    jspb.Message.getWrapperField(this, proto.BuildingFloorArea, 12));
};


/**
 * @param {?proto.BuildingFloorArea|undefined} value
 * @return {!proto.BuildingSummary} returns this
*/
proto.BuildingSummary.prototype.setGfaRequired = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.BuildingSummary} returns this
 */
proto.BuildingSummary.prototype.clearGfaRequired = function() {
  return this.setGfaRequired(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.BuildingSummary.prototype.hasGfaRequired = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional BuildingFAR far = 13;
 * @return {?proto.BuildingFAR}
 */
proto.BuildingSummary.prototype.getFar = function() {
  return /** @type{?proto.BuildingFAR} */ (
    jspb.Message.getWrapperField(this, proto.BuildingFAR, 13));
};


/**
 * @param {?proto.BuildingFAR|undefined} value
 * @return {!proto.BuildingSummary} returns this
*/
proto.BuildingSummary.prototype.setFar = function(value) {
  return jspb.Message.setWrapperField(this, 13, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.BuildingSummary} returns this
 */
proto.BuildingSummary.prototype.clearFar = function() {
  return this.setFar(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.BuildingSummary.prototype.hasFar = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional BuildingDimensions dimensions = 14;
 * @return {?proto.BuildingDimensions}
 */
proto.BuildingSummary.prototype.getDimensions = function() {
  return /** @type{?proto.BuildingDimensions} */ (
    jspb.Message.getWrapperField(this, proto.BuildingDimensions, 14));
};


/**
 * @param {?proto.BuildingDimensions|undefined} value
 * @return {!proto.BuildingSummary} returns this
*/
proto.BuildingSummary.prototype.setDimensions = function(value) {
  return jspb.Message.setWrapperField(this, 14, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.BuildingSummary} returns this
 */
proto.BuildingSummary.prototype.clearDimensions = function() {
  return this.setDimensions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.BuildingSummary.prototype.hasDimensions = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional BuildingCounts counts = 15;
 * @return {?proto.BuildingCounts}
 */
proto.BuildingSummary.prototype.getCounts = function() {
  return /** @type{?proto.BuildingCounts} */ (
    jspb.Message.getWrapperField(this, proto.BuildingCounts, 15));
};


/**
 * @param {?proto.BuildingCounts|undefined} value
 * @return {!proto.BuildingSummary} returns this
*/
proto.BuildingSummary.prototype.setCounts = function(value) {
  return jspb.Message.setWrapperField(this, 15, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.BuildingSummary} returns this
 */
proto.BuildingSummary.prototype.clearCounts = function() {
  return this.setCounts(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.BuildingSummary.prototype.hasCounts = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional BuildingCounts counts_20 = 16;
 * @return {?proto.BuildingCounts}
 */
proto.BuildingSummary.prototype.getCounts20 = function() {
  return /** @type{?proto.BuildingCounts} */ (
    jspb.Message.getWrapperField(this, proto.BuildingCounts, 16));
};


/**
 * @param {?proto.BuildingCounts|undefined} value
 * @return {!proto.BuildingSummary} returns this
*/
proto.BuildingSummary.prototype.setCounts20 = function(value) {
  return jspb.Message.setWrapperField(this, 16, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.BuildingSummary} returns this
 */
proto.BuildingSummary.prototype.clearCounts20 = function() {
  return this.setCounts20(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.BuildingSummary.prototype.hasCounts20 = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional BuildingCounts counts_25 = 17;
 * @return {?proto.BuildingCounts}
 */
proto.BuildingSummary.prototype.getCounts25 = function() {
  return /** @type{?proto.BuildingCounts} */ (
    jspb.Message.getWrapperField(this, proto.BuildingCounts, 17));
};


/**
 * @param {?proto.BuildingCounts|undefined} value
 * @return {!proto.BuildingSummary} returns this
*/
proto.BuildingSummary.prototype.setCounts25 = function(value) {
  return jspb.Message.setWrapperField(this, 17, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.BuildingSummary} returns this
 */
proto.BuildingSummary.prototype.clearCounts25 = function() {
  return this.setCounts25(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.BuildingSummary.prototype.hasCounts25 = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional BuildingCounts counts_30 = 18;
 * @return {?proto.BuildingCounts}
 */
proto.BuildingSummary.prototype.getCounts30 = function() {
  return /** @type{?proto.BuildingCounts} */ (
    jspb.Message.getWrapperField(this, proto.BuildingCounts, 18));
};


/**
 * @param {?proto.BuildingCounts|undefined} value
 * @return {!proto.BuildingSummary} returns this
*/
proto.BuildingSummary.prototype.setCounts30 = function(value) {
  return jspb.Message.setWrapperField(this, 18, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.BuildingSummary} returns this
 */
proto.BuildingSummary.prototype.clearCounts30 = function() {
  return this.setCounts30(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.BuildingSummary.prototype.hasCounts30 = function() {
  return jspb.Message.getField(this, 18) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.BuildingFloorArea.prototype.toObject = function(opt_includeInstance) {
  return proto.BuildingFloorArea.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.BuildingFloorArea} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.BuildingFloorArea.toObject = function(includeInstance, msg) {
  var f, obj = {
    residential: jspb.Message.getFieldWithDefault(msg, 1, 0),
    houseOfWorship: jspb.Message.getFieldWithDefault(msg, 2, 0),
    medicalOffice: jspb.Message.getFieldWithDefault(msg, 3, 0),
    school: jspb.Message.getFieldWithDefault(msg, 4, 0),
    communityFacilityOther: jspb.Message.getFieldWithDefault(msg, 5, 0),
    communityFacility: jspb.Message.getFieldWithDefault(msg, 6, 0),
    destinationRetail: jspb.Message.getFieldWithDefault(msg, 7, 0),
    hotel: jspb.Message.getFieldWithDefault(msg, 8, 0),
    lifeSciences: jspb.Message.getFieldWithDefault(msg, 9, 0),
    localRetail: jspb.Message.getFieldWithDefault(msg, 10, 0),
    office: jspb.Message.getFieldWithDefault(msg, 11, 0),
    supermarket: jspb.Message.getFieldWithDefault(msg, 12, 0),
    commercialOther: jspb.Message.getFieldWithDefault(msg, 13, 0),
    commercial: jspb.Message.getFieldWithDefault(msg, 14, 0),
    autoRelated: jspb.Message.getFieldWithDefault(msg, 15, 0),
    industrial: jspb.Message.getFieldWithDefault(msg, 16, 0),
    selfStorage: jspb.Message.getFieldWithDefault(msg, 17, 0),
    warehouse: jspb.Message.getFieldWithDefault(msg, 18, 0),
    manufacturingOther: jspb.Message.getFieldWithDefault(msg, 19, 0),
    manufacturing: jspb.Message.getFieldWithDefault(msg, 20, 0),
    parking: jspb.Message.getFieldWithDefault(msg, 21, 0),
    loading: jspb.Message.getFieldWithDefault(msg, 22, 0),
    bikeParking: jspb.Message.getFieldWithDefault(msg, 23, 0),
    total: jspb.Message.getFieldWithDefault(msg, 24, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.BuildingFloorArea}
 */
proto.BuildingFloorArea.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.BuildingFloorArea;
  return proto.BuildingFloorArea.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.BuildingFloorArea} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.BuildingFloorArea}
 */
proto.BuildingFloorArea.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setResidential(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setHouseOfWorship(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMedicalOffice(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSchool(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCommunityFacilityOther(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCommunityFacility(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDestinationRetail(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setHotel(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLifeSciences(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLocalRetail(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOffice(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSupermarket(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCommercialOther(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCommercial(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAutoRelated(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIndustrial(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSelfStorage(value);
      break;
    case 18:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setWarehouse(value);
      break;
    case 19:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setManufacturingOther(value);
      break;
    case 20:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setManufacturing(value);
      break;
    case 21:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setParking(value);
      break;
    case 22:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLoading(value);
      break;
    case 23:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBikeParking(value);
      break;
    case 24:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotal(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.BuildingFloorArea.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.BuildingFloorArea.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.BuildingFloorArea} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.BuildingFloorArea.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResidential();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getHouseOfWorship();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getMedicalOffice();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getSchool();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getCommunityFacilityOther();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getCommunityFacility();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getDestinationRetail();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getHotel();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getLifeSciences();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = message.getLocalRetail();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = message.getOffice();
  if (f !== 0) {
    writer.writeInt32(
      11,
      f
    );
  }
  f = message.getSupermarket();
  if (f !== 0) {
    writer.writeInt32(
      12,
      f
    );
  }
  f = message.getCommercialOther();
  if (f !== 0) {
    writer.writeInt32(
      13,
      f
    );
  }
  f = message.getCommercial();
  if (f !== 0) {
    writer.writeInt32(
      14,
      f
    );
  }
  f = message.getAutoRelated();
  if (f !== 0) {
    writer.writeInt32(
      15,
      f
    );
  }
  f = message.getIndustrial();
  if (f !== 0) {
    writer.writeInt32(
      16,
      f
    );
  }
  f = message.getSelfStorage();
  if (f !== 0) {
    writer.writeInt32(
      17,
      f
    );
  }
  f = message.getWarehouse();
  if (f !== 0) {
    writer.writeInt32(
      18,
      f
    );
  }
  f = message.getManufacturingOther();
  if (f !== 0) {
    writer.writeInt32(
      19,
      f
    );
  }
  f = message.getManufacturing();
  if (f !== 0) {
    writer.writeInt32(
      20,
      f
    );
  }
  f = message.getParking();
  if (f !== 0) {
    writer.writeInt32(
      21,
      f
    );
  }
  f = message.getLoading();
  if (f !== 0) {
    writer.writeInt32(
      22,
      f
    );
  }
  f = message.getBikeParking();
  if (f !== 0) {
    writer.writeInt32(
      23,
      f
    );
  }
  f = message.getTotal();
  if (f !== 0) {
    writer.writeInt32(
      24,
      f
    );
  }
};


/**
 * optional int32 residential = 1;
 * @return {number}
 */
proto.BuildingFloorArea.prototype.getResidential = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.BuildingFloorArea} returns this
 */
proto.BuildingFloorArea.prototype.setResidential = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 house_of_worship = 2;
 * @return {number}
 */
proto.BuildingFloorArea.prototype.getHouseOfWorship = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.BuildingFloorArea} returns this
 */
proto.BuildingFloorArea.prototype.setHouseOfWorship = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 medical_office = 3;
 * @return {number}
 */
proto.BuildingFloorArea.prototype.getMedicalOffice = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.BuildingFloorArea} returns this
 */
proto.BuildingFloorArea.prototype.setMedicalOffice = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 school = 4;
 * @return {number}
 */
proto.BuildingFloorArea.prototype.getSchool = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.BuildingFloorArea} returns this
 */
proto.BuildingFloorArea.prototype.setSchool = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 community_facility_other = 5;
 * @return {number}
 */
proto.BuildingFloorArea.prototype.getCommunityFacilityOther = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.BuildingFloorArea} returns this
 */
proto.BuildingFloorArea.prototype.setCommunityFacilityOther = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int32 community_facility = 6;
 * @return {number}
 */
proto.BuildingFloorArea.prototype.getCommunityFacility = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.BuildingFloorArea} returns this
 */
proto.BuildingFloorArea.prototype.setCommunityFacility = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int32 destination_retail = 7;
 * @return {number}
 */
proto.BuildingFloorArea.prototype.getDestinationRetail = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.BuildingFloorArea} returns this
 */
proto.BuildingFloorArea.prototype.setDestinationRetail = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int32 hotel = 8;
 * @return {number}
 */
proto.BuildingFloorArea.prototype.getHotel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.BuildingFloorArea} returns this
 */
proto.BuildingFloorArea.prototype.setHotel = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int32 life_sciences = 9;
 * @return {number}
 */
proto.BuildingFloorArea.prototype.getLifeSciences = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.BuildingFloorArea} returns this
 */
proto.BuildingFloorArea.prototype.setLifeSciences = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional int32 local_retail = 10;
 * @return {number}
 */
proto.BuildingFloorArea.prototype.getLocalRetail = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.BuildingFloorArea} returns this
 */
proto.BuildingFloorArea.prototype.setLocalRetail = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional int32 office = 11;
 * @return {number}
 */
proto.BuildingFloorArea.prototype.getOffice = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.BuildingFloorArea} returns this
 */
proto.BuildingFloorArea.prototype.setOffice = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional int32 supermarket = 12;
 * @return {number}
 */
proto.BuildingFloorArea.prototype.getSupermarket = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.BuildingFloorArea} returns this
 */
proto.BuildingFloorArea.prototype.setSupermarket = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional int32 commercial_other = 13;
 * @return {number}
 */
proto.BuildingFloorArea.prototype.getCommercialOther = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.BuildingFloorArea} returns this
 */
proto.BuildingFloorArea.prototype.setCommercialOther = function(value) {
  return jspb.Message.setProto3IntField(this, 13, value);
};


/**
 * optional int32 commercial = 14;
 * @return {number}
 */
proto.BuildingFloorArea.prototype.getCommercial = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.BuildingFloorArea} returns this
 */
proto.BuildingFloorArea.prototype.setCommercial = function(value) {
  return jspb.Message.setProto3IntField(this, 14, value);
};


/**
 * optional int32 auto_related = 15;
 * @return {number}
 */
proto.BuildingFloorArea.prototype.getAutoRelated = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/**
 * @param {number} value
 * @return {!proto.BuildingFloorArea} returns this
 */
proto.BuildingFloorArea.prototype.setAutoRelated = function(value) {
  return jspb.Message.setProto3IntField(this, 15, value);
};


/**
 * optional int32 industrial = 16;
 * @return {number}
 */
proto.BuildingFloorArea.prototype.getIndustrial = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/**
 * @param {number} value
 * @return {!proto.BuildingFloorArea} returns this
 */
proto.BuildingFloorArea.prototype.setIndustrial = function(value) {
  return jspb.Message.setProto3IntField(this, 16, value);
};


/**
 * optional int32 self_storage = 17;
 * @return {number}
 */
proto.BuildingFloorArea.prototype.getSelfStorage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/**
 * @param {number} value
 * @return {!proto.BuildingFloorArea} returns this
 */
proto.BuildingFloorArea.prototype.setSelfStorage = function(value) {
  return jspb.Message.setProto3IntField(this, 17, value);
};


/**
 * optional int32 warehouse = 18;
 * @return {number}
 */
proto.BuildingFloorArea.prototype.getWarehouse = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 18, 0));
};


/**
 * @param {number} value
 * @return {!proto.BuildingFloorArea} returns this
 */
proto.BuildingFloorArea.prototype.setWarehouse = function(value) {
  return jspb.Message.setProto3IntField(this, 18, value);
};


/**
 * optional int32 manufacturing_other = 19;
 * @return {number}
 */
proto.BuildingFloorArea.prototype.getManufacturingOther = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 19, 0));
};


/**
 * @param {number} value
 * @return {!proto.BuildingFloorArea} returns this
 */
proto.BuildingFloorArea.prototype.setManufacturingOther = function(value) {
  return jspb.Message.setProto3IntField(this, 19, value);
};


/**
 * optional int32 manufacturing = 20;
 * @return {number}
 */
proto.BuildingFloorArea.prototype.getManufacturing = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 20, 0));
};


/**
 * @param {number} value
 * @return {!proto.BuildingFloorArea} returns this
 */
proto.BuildingFloorArea.prototype.setManufacturing = function(value) {
  return jspb.Message.setProto3IntField(this, 20, value);
};


/**
 * optional int32 parking = 21;
 * @return {number}
 */
proto.BuildingFloorArea.prototype.getParking = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 21, 0));
};


/**
 * @param {number} value
 * @return {!proto.BuildingFloorArea} returns this
 */
proto.BuildingFloorArea.prototype.setParking = function(value) {
  return jspb.Message.setProto3IntField(this, 21, value);
};


/**
 * optional int32 loading = 22;
 * @return {number}
 */
proto.BuildingFloorArea.prototype.getLoading = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 22, 0));
};


/**
 * @param {number} value
 * @return {!proto.BuildingFloorArea} returns this
 */
proto.BuildingFloorArea.prototype.setLoading = function(value) {
  return jspb.Message.setProto3IntField(this, 22, value);
};


/**
 * optional int32 bike_parking = 23;
 * @return {number}
 */
proto.BuildingFloorArea.prototype.getBikeParking = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 23, 0));
};


/**
 * @param {number} value
 * @return {!proto.BuildingFloorArea} returns this
 */
proto.BuildingFloorArea.prototype.setBikeParking = function(value) {
  return jspb.Message.setProto3IntField(this, 23, value);
};


/**
 * optional int32 total = 24;
 * @return {number}
 */
proto.BuildingFloorArea.prototype.getTotal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 24, 0));
};


/**
 * @param {number} value
 * @return {!proto.BuildingFloorArea} returns this
 */
proto.BuildingFloorArea.prototype.setTotal = function(value) {
  return jspb.Message.setProto3IntField(this, 24, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.BuildingFAR.prototype.toObject = function(opt_includeInstance) {
  return proto.BuildingFAR.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.BuildingFAR} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.BuildingFAR.toObject = function(includeInstance, msg) {
  var f, obj = {
    residential: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
    communityFacility: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    commercial: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    manufacturing: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    total: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.BuildingFAR}
 */
proto.BuildingFAR.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.BuildingFAR;
  return proto.BuildingFAR.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.BuildingFAR} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.BuildingFAR}
 */
proto.BuildingFAR.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setResidential(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setCommunityFacility(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setCommercial(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setManufacturing(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setTotal(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.BuildingFAR.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.BuildingFAR.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.BuildingFAR} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.BuildingFAR.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResidential();
  if (f !== 0.0) {
    writer.writeFloat(
      1,
      f
    );
  }
  f = message.getCommunityFacility();
  if (f !== 0.0) {
    writer.writeFloat(
      2,
      f
    );
  }
  f = message.getCommercial();
  if (f !== 0.0) {
    writer.writeFloat(
      3,
      f
    );
  }
  f = message.getManufacturing();
  if (f !== 0.0) {
    writer.writeFloat(
      4,
      f
    );
  }
  f = message.getTotal();
  if (f !== 0.0) {
    writer.writeFloat(
      5,
      f
    );
  }
};


/**
 * optional float residential = 1;
 * @return {number}
 */
proto.BuildingFAR.prototype.getResidential = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.BuildingFAR} returns this
 */
proto.BuildingFAR.prototype.setResidential = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional float community_facility = 2;
 * @return {number}
 */
proto.BuildingFAR.prototype.getCommunityFacility = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.BuildingFAR} returns this
 */
proto.BuildingFAR.prototype.setCommunityFacility = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional float commercial = 3;
 * @return {number}
 */
proto.BuildingFAR.prototype.getCommercial = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.BuildingFAR} returns this
 */
proto.BuildingFAR.prototype.setCommercial = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional float manufacturing = 4;
 * @return {number}
 */
proto.BuildingFAR.prototype.getManufacturing = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.BuildingFAR} returns this
 */
proto.BuildingFAR.prototype.setManufacturing = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional float total = 5;
 * @return {number}
 */
proto.BuildingFAR.prototype.getTotal = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.BuildingFAR} returns this
 */
proto.BuildingFAR.prototype.setTotal = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.BuildingDimensions.prototype.toObject = function(opt_includeInstance) {
  return proto.BuildingDimensions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.BuildingDimensions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.BuildingDimensions.toObject = function(includeInstance, msg) {
  var f, obj = {
    height: jspb.Message.getFieldWithDefault(msg, 1, 0),
    elevation: jspb.Message.getFieldWithDefault(msg, 2, 0),
    frontage: jspb.Message.getFieldWithDefault(msg, 3, 0),
    floorCount: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.BuildingDimensions}
 */
proto.BuildingDimensions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.BuildingDimensions;
  return proto.BuildingDimensions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.BuildingDimensions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.BuildingDimensions}
 */
proto.BuildingDimensions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setHeight(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setElevation(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFrontage(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFloorCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.BuildingDimensions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.BuildingDimensions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.BuildingDimensions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.BuildingDimensions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeight();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getElevation();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getFrontage();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getFloorCount();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
};


/**
 * optional int32 height = 1;
 * @return {number}
 */
proto.BuildingDimensions.prototype.getHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.BuildingDimensions} returns this
 */
proto.BuildingDimensions.prototype.setHeight = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 elevation = 2;
 * @return {number}
 */
proto.BuildingDimensions.prototype.getElevation = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.BuildingDimensions} returns this
 */
proto.BuildingDimensions.prototype.setElevation = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 frontage = 3;
 * @return {number}
 */
proto.BuildingDimensions.prototype.getFrontage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.BuildingDimensions} returns this
 */
proto.BuildingDimensions.prototype.setFrontage = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 floor_count = 4;
 * @return {number}
 */
proto.BuildingDimensions.prototype.getFloorCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.BuildingDimensions} returns this
 */
proto.BuildingDimensions.prototype.setFloorCount = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.BuildingCounts.prototype.toObject = function(opt_includeInstance) {
  return proto.BuildingCounts.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.BuildingCounts} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.BuildingCounts.toObject = function(includeInstance, msg) {
  var f, obj = {
    residentialUnits: jspb.Message.getFieldWithDefault(msg, 1, 0),
    hotelRooms: jspb.Message.getFieldWithDefault(msg, 2, 0),
    parkingSpacesResidential: jspb.Message.getFieldWithDefault(msg, 3, 0),
    parkingSpacesCommunityFacility: jspb.Message.getFieldWithDefault(msg, 4, 0),
    parkingSpacesCommercial: jspb.Message.getFieldWithDefault(msg, 5, 0),
    parkingSpacesManufacturing: jspb.Message.getFieldWithDefault(msg, 6, 0),
    parkingSpacesTotal: jspb.Message.getFieldWithDefault(msg, 7, 0),
    bikeParkingSpaces: jspb.Message.getFieldWithDefault(msg, 8, 0),
    loadingBerths: jspb.Message.getFieldWithDefault(msg, 9, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.BuildingCounts}
 */
proto.BuildingCounts.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.BuildingCounts;
  return proto.BuildingCounts.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.BuildingCounts} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.BuildingCounts}
 */
proto.BuildingCounts.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setResidentialUnits(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setHotelRooms(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setParkingSpacesResidential(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setParkingSpacesCommunityFacility(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setParkingSpacesCommercial(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setParkingSpacesManufacturing(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setParkingSpacesTotal(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBikeParkingSpaces(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLoadingBerths(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.BuildingCounts.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.BuildingCounts.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.BuildingCounts} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.BuildingCounts.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResidentialUnits();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getHotelRooms();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getParkingSpacesResidential();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getParkingSpacesCommunityFacility();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getParkingSpacesCommercial();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getParkingSpacesManufacturing();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getParkingSpacesTotal();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getBikeParkingSpaces();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getLoadingBerths();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
};


/**
 * optional int32 residential_units = 1;
 * @return {number}
 */
proto.BuildingCounts.prototype.getResidentialUnits = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.BuildingCounts} returns this
 */
proto.BuildingCounts.prototype.setResidentialUnits = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 hotel_rooms = 2;
 * @return {number}
 */
proto.BuildingCounts.prototype.getHotelRooms = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.BuildingCounts} returns this
 */
proto.BuildingCounts.prototype.setHotelRooms = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 parking_spaces_residential = 3;
 * @return {number}
 */
proto.BuildingCounts.prototype.getParkingSpacesResidential = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.BuildingCounts} returns this
 */
proto.BuildingCounts.prototype.setParkingSpacesResidential = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 parking_spaces_community_facility = 4;
 * @return {number}
 */
proto.BuildingCounts.prototype.getParkingSpacesCommunityFacility = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.BuildingCounts} returns this
 */
proto.BuildingCounts.prototype.setParkingSpacesCommunityFacility = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 parking_spaces_commercial = 5;
 * @return {number}
 */
proto.BuildingCounts.prototype.getParkingSpacesCommercial = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.BuildingCounts} returns this
 */
proto.BuildingCounts.prototype.setParkingSpacesCommercial = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int32 parking_spaces_manufacturing = 6;
 * @return {number}
 */
proto.BuildingCounts.prototype.getParkingSpacesManufacturing = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.BuildingCounts} returns this
 */
proto.BuildingCounts.prototype.setParkingSpacesManufacturing = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int32 parking_spaces_total = 7;
 * @return {number}
 */
proto.BuildingCounts.prototype.getParkingSpacesTotal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.BuildingCounts} returns this
 */
proto.BuildingCounts.prototype.setParkingSpacesTotal = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int32 bike_parking_spaces = 8;
 * @return {number}
 */
proto.BuildingCounts.prototype.getBikeParkingSpaces = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.BuildingCounts} returns this
 */
proto.BuildingCounts.prototype.setBikeParkingSpaces = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int32 loading_berths = 9;
 * @return {number}
 */
proto.BuildingCounts.prototype.getLoadingBerths = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.BuildingCounts} returns this
 */
proto.BuildingCounts.prototype.setLoadingBerths = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ScenarioSummary.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ScenarioSummary.prototype.toObject = function(opt_includeInstance) {
  return proto.ScenarioSummary.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ScenarioSummary} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ScenarioSummary.toObject = function(includeInstance, msg) {
  var f, obj = {
    scenarioId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    buildingsList: jspb.Message.toObjectList(msg.getBuildingsList(),
    proto.BuildingSummary.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ScenarioSummary}
 */
proto.ScenarioSummary.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ScenarioSummary;
  return proto.ScenarioSummary.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ScenarioSummary} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ScenarioSummary}
 */
proto.ScenarioSummary.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setScenarioId(value);
      break;
    case 2:
      var value = new proto.BuildingSummary;
      reader.readMessage(value,proto.BuildingSummary.deserializeBinaryFromReader);
      msg.addBuildings(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ScenarioSummary.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ScenarioSummary.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ScenarioSummary} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ScenarioSummary.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getScenarioId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBuildingsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.BuildingSummary.serializeBinaryToWriter
    );
  }
};


/**
 * optional string scenario_id = 1;
 * @return {string}
 */
proto.ScenarioSummary.prototype.getScenarioId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ScenarioSummary} returns this
 */
proto.ScenarioSummary.prototype.setScenarioId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated BuildingSummary buildings = 2;
 * @return {!Array<!proto.BuildingSummary>}
 */
proto.ScenarioSummary.prototype.getBuildingsList = function() {
  return /** @type{!Array<!proto.BuildingSummary>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.BuildingSummary, 2));
};


/**
 * @param {!Array<!proto.BuildingSummary>} value
 * @return {!proto.ScenarioSummary} returns this
*/
proto.ScenarioSummary.prototype.setBuildingsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.BuildingSummary=} opt_value
 * @param {number=} opt_index
 * @return {!proto.BuildingSummary}
 */
proto.ScenarioSummary.prototype.addBuildings = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.BuildingSummary, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ScenarioSummary} returns this
 */
proto.ScenarioSummary.prototype.clearBuildingsList = function() {
  return this.setBuildingsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.StudySummary.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.StudySummary.prototype.toObject = function(opt_includeInstance) {
  return proto.StudySummary.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.StudySummary} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.StudySummary.toObject = function(includeInstance, msg) {
  var f, obj = {
    studyId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    scenariosList: jspb.Message.toObjectList(msg.getScenariosList(),
    proto.ScenarioSummary.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.StudySummary}
 */
proto.StudySummary.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.StudySummary;
  return proto.StudySummary.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.StudySummary} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.StudySummary}
 */
proto.StudySummary.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStudyId(value);
      break;
    case 2:
      var value = new proto.ScenarioSummary;
      reader.readMessage(value,proto.ScenarioSummary.deserializeBinaryFromReader);
      msg.addScenarios(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.StudySummary.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.StudySummary.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.StudySummary} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.StudySummary.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStudyId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getScenariosList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.ScenarioSummary.serializeBinaryToWriter
    );
  }
};


/**
 * optional string study_id = 1;
 * @return {string}
 */
proto.StudySummary.prototype.getStudyId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.StudySummary} returns this
 */
proto.StudySummary.prototype.setStudyId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated ScenarioSummary scenarios = 2;
 * @return {!Array<!proto.ScenarioSummary>}
 */
proto.StudySummary.prototype.getScenariosList = function() {
  return /** @type{!Array<!proto.ScenarioSummary>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ScenarioSummary, 2));
};


/**
 * @param {!Array<!proto.ScenarioSummary>} value
 * @return {!proto.StudySummary} returns this
*/
proto.StudySummary.prototype.setScenariosList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.ScenarioSummary=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ScenarioSummary}
 */
proto.StudySummary.prototype.addScenarios = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.ScenarioSummary, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.StudySummary} returns this
 */
proto.StudySummary.prototype.clearScenariosList = function() {
  return this.setScenariosList([]);
};


goog.object.extend(exports, proto);
